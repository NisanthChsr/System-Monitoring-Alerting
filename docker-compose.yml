version: '3.7'
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2182:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9093", "--list" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  system-monitor:
    build:
      context: .
      dockerfile: system-monitor/Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    depends_on:
      - kafka

  log-storing:
    build:
      context: .
      dockerfile: log-storing/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      SPRING_ELASTICSEARCH_SSL_VERIFICATION_MODE: none
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
    depends_on:
      system-monitor:
        condition: service_started
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
